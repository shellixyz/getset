name: test

on:
  push:
  pull_request:

env:
  RUSTFLAGS: "--deny=warnings"

jobs:
  branch_protection:
    runs-on: ubuntu-latest
    steps:
      - run: ':'

  test:
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        rust: [stable, nightly]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Cache target
      id: cache-target
      uses: actions/cache@v4
      with:
        path: target
        key: ${{ runner.os }}-${{ matrix.rust }}-test-target-${{ hashFiles('**/Cargo.toml') }}
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
    - name: Test
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: -- --nocapture

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Cache target
        id: cache-target
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-clippy-target-${{ hashFiles('**/Cargo.toml') }}
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: rustup component add clippy
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Cache target
        id: cache-target
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-format-target-${{ hashFiles('**/Cargo.toml') }}
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check
